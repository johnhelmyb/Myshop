{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstante\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('http://localhost:3000/api/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('http://localhost:3000/api/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/Users/John/Desktop/MyShopR/Myshop/frontend/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,EAIQC,gBAJR,EAKQC,mBALR,EAMQC,mBANR,EAOQC,YAPR,QAO2B,4BAP3B;AASA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAmB;AAClEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX,qBAAR;AAA+BY,IAAAA,OAAO,EAAE;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAcC,MAAAA;AAAd;AAAxC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMf,KAAK,CAACgB,IAAN,CAAW,oCAAX,EACrB;AAAEP,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KADqB,CAArB;AAEAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,qBAAR;AAA+BW,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACH,GAND,CAME,OAAOM,KAAP,EAAc;AACZT,IAAAA,QAAQ,CAAC;AACTC,MAAAA,IAAI,EAAEZ,kBADG;AAETa,MAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADb,GACuBF,KAAK,CAACE;AAH7B,KAAD,CAAR;AAKH;AACJ,CAfM;AAiBP,OAAO,MAAMC,MAAM,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAmB;AAC1DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,mBAAR;AAA6BS,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAAQC,MAAAA;AAAR;AAAtC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMf,KAAK,CAACgB,IAAN,CAAW,kCAAX,EAA+C;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA/C,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACH,GAJD,CAIE,OAAOM,KAAP,EAAc;AACZT,IAAAA,QAAQ,CAAC;AACTC,MAAAA,IAAI,EAAET,gBADG;AAETU,MAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADb,GACuBF,KAAK,CAACE;AAH7B,KAAD,CAAR;AAKH;AACJ,CAbM;AAgBP,OAAO,MAAME,OAAO,GAAG,MAAOb,QAAD,IAAc;AACvCK,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,EAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAd,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN;AAAP,GAAD,CAAR;AACH,CAJM","sourcesContent":["import Axios from \"axios\";\nimport { \n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n        USER_SIGNIN_FAIL, \n        USER_SIGNIN_REQUEST, \n        USER_SIGNIN_SUCCESS, \n        USER_SIGNOUT} from \"../constants/userConstante\";\n\nexport const register = (name, email, password) => async (dispatch) =>{\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email,password }});\n    try {\n        const {data} = await Axios.post('http://localhost:3000/api/register', \n        { name, email, password });\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response && error.response.data.message \n        ? error.response.data.message : error.message, \n        });\n    }\n};\n\nexport const signin = (email, password) => async (dispatch) =>{\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email,password }});\n    try {\n        const {data} = await Axios.post('http://localhost:3000/api/signin', { email, password });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n        type: USER_SIGNIN_FAIL,\n        payload: error.response && error.response.data.message \n        ? error.response.data.message : error.message, \n        });\n    }\n};\n\n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    dispatch({type: USER_SIGNOUT});\n}"]},"metadata":{},"sourceType":"module"}