{"ast":null,"code":"import Axios from \"axios\";\nimport axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product = async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Rearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/John/Desktop/MyShopR/Myshop/frontend/src/actions/productActions.js"],"names":["Axios","axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","PRODUCT_SAVE_REQUEST","userSignin","userInfo","post","headers","token","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","detailsProduct","productId","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EACSC,uBADT,EAESC,uBAFT,EAGSC,iBAHT,EAISC,oBAJT,EAKSC,oBALT,QAKqC,+BALrC;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAD,CAAR;;AAGA,MAAI;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,oBAAR;AAA8BM,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,iBAAR;AAA2BQ,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAVM;;AAWP,MAAMC,WAAW,GAAIC,OAAD,GAAY,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC1D,MAAI;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAES,oBAAR;AAA8BN,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAR;AACA,UAAM;AAAEG,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAA8BH,QAAQ,EAA5C;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACsB,IAAN,CAAW,eAAX,EAA4BL,OAA5B,EAAqC;AACxDM,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWF,QAAQ,CAACG;AADhC;AAD+C,KAArC,CAAvB;AAKAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEe,oBAAR;AAA8BZ,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GATD,CASE,OAAOG,KAAP,EAAa;AACXL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEgB,iBAAR;AAA2Bb,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAbD;;AAcA,OAAO,MAAMY,cAAc,GAAIC,SAAD,IAAe,MAAOnB,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,uBAAR;AAAiCU,IAAAA,OAAO,EAAEe;AAA1C,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAAEjB,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,iBAAgBgB,SAAU,EAArC,CAAvB;AACAnB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,uBAAR;AAAiCS,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,oBADD;AAELW,MAAAA,OAAO,EACHC,KAAK,CAACe,QAAN,IAAkBf,KAAK,CAACe,QAAN,CAAelB,IAAf,CAAoBI,OAAtC,GACCD,KAAK,CAACe,QAAN,CAAelB,IAAf,CAAoBI,OADrB,GAEED,KAAK,CAACC;AALP,KAAD,CAAR;AAOH;AACJ,CAdM","sourcesContent":["import Axios from \"axios\";\nimport axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, \n         PRODUCT_DETAILS_REQUEST, \n         PRODUCT_DETAILS_SUCCESS, \n         PRODUCT_LIST_FAIL, \n         PRODUCT_LIST_REQUEST,\n         PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\n\nexport const listProducts = () => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n        const { data } = await axios.get('/api/products');\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n};\nconst saveProduct = (product) = async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\n        const { userSignin: { userInfo }} = getState();\n        const { data } = await Axios.post('/api/products', product, {\n            headers: {\n                'Authorization': 'Rearer' + userInfo.token\n            }\n        });\n        dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    } catch (error){\n        dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message});\n    }\n}\nexport const detailsProduct = (productId) => async (dispatch) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try {\n        const { data } = await Axios.get(`/api/products/${productId}`);\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ \n            type: PRODUCT_DETAILS_FAIL, \n            payload: \n                error.response && error.response.data.message \n                ?error.response.data.message \n                : error.message,\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}