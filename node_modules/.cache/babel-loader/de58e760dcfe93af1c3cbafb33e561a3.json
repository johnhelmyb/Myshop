{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      //get item to add to cart\n      const item = action.payload; //if i have already item in cart after commpaire it\n\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { //not change but update\n          ...state,\n          cartItems: state.cartItems.map(x => //compaire with exist item and return it\n          x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        }; //if item is new add it\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/John/Desktop/MyShopR/Myshop/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI;AACA,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB,CAFJ,CAGI;;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH;AACA,aAAGN,KAFA;AAGHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAAO;AACtCA,UAAAA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAD9B;AAHR,SAAP;AAOH,OARD,MAQO;AACH,eAAO,EAAE,GAAGR,KAAL;AAAYC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAvB,SAAP,CADG,CACwD;AAC9D;;AACD,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAFR,OAAP;;AAIR;AACI,aAAOL,KAAP;AAvBR;AAyBH,CA1BM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            //get item to add to cart\n            const item = action.payload;\n            //if i have already item in cart after commpaire it\n            const existItem = state.cartItems.find((x) => x.product === item.product);\n            if (existItem) {\n                return { \n                    //not change but update\n                    ...state, \n                    cartItems: state.cartItems.map((x) => //compaire with exist item and return it\n                    x.product === existItem.product ? item : x\n                    ),\n                };\n            } else {\n                return { ...state, cartItems: [...state.cartItems, item] };//if item is new add it\n            }\n            case CART_REMOVE_ITEM:\n                return {\n                    ...state,\n                    cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n                };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}